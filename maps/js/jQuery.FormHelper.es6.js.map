{"version":3,"sources":["../src/js/jQuery.FormHelper.es6.js"],"names":["global","factory","define","amd","$","document","exports","module","require","jQuery","window","undefined","pluginName","settings","defaultOptions","disableSubmitBtn","errorHurdling","DEBUG_MODE","$window","$document","p","DEBUG","params","console","info","toString","ERROR","error","WARNING","warn","validateEmail","emailAddrString","test","validateTel","phoneNumberString","supportedTag","supportedType","nameSpaceKey","$el","constructor","el","opts","extend","init","attr","pairingErrorAndFields","find","prop","submit","e","preventDefault","resetFormError","validationLoop","join","each","idx","rules","data","val","forEach","r","result","validationDelegator","log","idKey","errors","length","addClass","rule","trim","toLocaleLowerCase","inputTag","getTargetInputField","inputIDStr","generateUUID_v4","errorRules","toLowerCase","split","rulesArr","finalRules","Set","concat","includes","typeOfField","required","existingRules","push","hasErrorFor","afterInput","prev","underErrorGroup","parent","toUpperCase","underErrorGroupWithForKey","underErrorGroupAfterInput","text","eachField_forDebugging","removeClass","d","Date","getTime","d2","performance","now","replace","c","Math","random","floor","fn","options"],"mappings":"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","sourcesContent":["/**\n * Form Validation Helper jQuery Plugin\n * Author: Kevin\n * Mar-2020\n *\n * Changelog:\n * Mar-2020 - Rewrite into ES6\n *\n * Features:\n * 1. Validation Form fields value based on type or Regex\n * 2. Display, focus, (and scroll to) error (or the first of) message\n * 3. Support validation of single field or all fields\n *\n * Special thanks to @publicJorn [Jorn Luiten] for the ES6 jQuery Plugins template\n */\n(function(global, factory) {\n  'use strict';\n\n\n  if (typeof define === 'function' && define.amd) {\n    define(['jquery'], function($) {\n      return factory($, global, global.document);\n    });\n  } else if (typeof exports === \"object\" && exports) {\n    module.exports = factory(require('jquery'), global, global.document);\n  } else {\n    factory(jQuery, global, global.document);\n  }\n})(typeof window !== 'undefined' ? window : this, function($, window, document, undefined) {\n  'use strict';\n\n  const pluginName = 'FormHelper';\n\n  // -- Globals (shared across all plugin instances)\n  let settings = {};\n  const defaultOptions = {\n    // Component(s) default behavior\n    disableSubmitBtn : true,\n    errorHurdling    : false,\n    // Development Related\n    DEBUG_MODE : false,\n  };\n\n  const $window = $(window);\n  const $document = $(document);\n\n  // p = placeholder, together with pluginName\n  const p = {};\n\n  // Utilities Func\n  const DEBUG   = (...params) => { settings.DEBUG_MODE && console.info ( \"DEBUG:\\n\\t\"   + params.toString() + \"\\n---\"); }\n  const ERROR   = (...params) => { settings.DEBUG_MODE && console.error( \"ERROR:\\n\\t\"   + params.toString() + \"\\n---\"); }\n  const WARNING = (...params) => { settings.DEBUG_MODE && console.warn ( \"WARNING:\\n\\t\" + params.toString() + \"\\n---\"); }\n\n  // Regex Test Methods\n  const validateEmail = (emailAddrString) => (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(emailAddrString));\n  const validateTel = (phoneNumberString) => (/^[\\+]?[(]?[0-9]{0,3}[)]?[-\\s]?[0-9]{4}[-\\s]?[0-9]{4,6}$/.test(phoneNumberString));\n\n  // TODO: addition tag & type needs to be supported\n  const supportedTag = [\"INPUT\", \"TEXTAREA\"/* , \"SELECT\" */];\n  const supportedType = [\"EMAIL\", \"TEL\"];\n  const nameSpaceKey = \"formHelper_\";\n\n  let $el;\n\n  p[pluginName] = class {\n    constructor (el, opts) {\n      $el = $(el);\n      settings = $.extend({}, defaultOptions, opts) ;\n      // this._defaultOptions = defaultOptions;\n\n      this.init();\n    }\n\n    init() {\n      // Let's disable HTML5 default validation\n      $el.attr(\"novalidate\", \"\");\n\n\n      // Preparing\n      this.pairingErrorAndFields();\n      DEBUG(pluginName+' initialised', this.el);\n\n      // this.eachField_forDebugging();\n\n      if (settings.disableSubmitBtn) {\n        // TODO: this needs to be handle together with \"on_change\" & \"on_submit\"\n        $el.find('[type=\"submit\"]').prop(\"disabled\", true);\n      }\n      if (true) {\n        // TODO: this needs to be handle together with \"on_change\" & \"on_submit\"\n        $el.submit((e) => {\n          e.preventDefault();\n\n          this.resetFormError();\n          this.validationLoop();\n\n          return false;\n        })\n      }\n\n    }\n\n\n    /**\n     * Perform a full test on specified form fields\n     */\n    validationLoop() {\n\n      $el.find(supportedTag.join(',')).each((idx, e) => {\n        let rules = $(e).data(nameSpaceKey+\"rules\");\n        let val = $(e).val();\n\n        rules.forEach( r => {\n          let result = this.validationDelegator(val, r);\n          console.log(\"Testing['\"+val+\"' with rule: '\"+r+\"'] = \" + result);\n\n          if (!result) {\n            // Error show up\n            let idKey = $(e).attr(\"id\");\n            $(e).attr(\"aria-invalid\", true);\n\n            let errors = $('error[errorFor=\"'+idKey+'\"], .error[errorFor=\"'+idKey+'\"]');\n            if (errors.length == 1) {\n              errors.addClass(\"errorShow\");\n            } else if (errors.length > 1) {\n              $('error[data-rule=\"'+r+'\"], .error[data-rule=\"'+r+'\"]').addClass(\"errorShow\");\n            } else {\n              ERROR(\"Error message disappeared! Something wrong happened\");\n            }\n\n            // return result;  // TODO: needs to handle \"errorHurdling\"\n          }\n        });\n      });\n\n      return false;\n    }\n\n\n    /**\n     * Test single form field (or a single group like checkbox)\n     * and then return validation result (true or false)\n     *\n     * p.s. for 'Required', 'email', 'tel' rule, string will be trim and test but other won't\n     *\n     * @param {string} val - Form Field value in text\n     * @param {string} rule - Name (key) of validation rule, single value only\n     */\n    validationDelegator(val, rule) {\n\n      // if (!val) {\n      //   ERROR(\"Value to be tested is empty\");\n      //   return false;\n      // }\n\n      let r = rule.trim().toLocaleLowerCase();\n\n      if (r === \"required\") {\n        return (val.trim().length > 0);\n      } else if (r === \"email\") {\n        return validateEmail(val.trim());\n      } else if (r === \"tel\") {\n        return validateTel(val.trim());\n      } else {\n        ERROR(\"Rule: \"+r+\" is not supported\");\n      }\n      return false;\n    }\n\n\n    // Link up error message to form fields\n    pairingErrorAndFields() {\n\n      // Gather all rules & store in Form Fields for future use\n      $(\".error, error\").each((idx, e) => {\n\n        let inputTag = this.getTargetInputField(e);\n        if (inputTag) {\n\n          // Pairing by ID string\n          let inputIDStr = $(inputTag).attr(\"id\") || this.generateUUID_v4();\n          $(e).data(\"errorFor\", inputIDStr).attr(\"errorFor\", inputIDStr);\n          // if (settings.DEBUG_MODE) {\n          //   $(e).attr(\"errorFor\", inputIDStr);\n          // }\n\n          // Copy rules into input fields\n          // 1. gathering all rules into single list (single source of truth)\n          let errorRules = $(e).attr(\"data-rule\") ? $(e).attr(\"data-rule\").toLowerCase().split(',') : [];\n          let rulesArr = $(inputTag).data(nameSpaceKey+\"rules\") || [];\n          // TODO: regex rules\n          let finalRules = [...new Set(rulesArr.concat(errorRules))];\n\n          $(inputTag).data(nameSpaceKey+\"rules\", finalRules);\n          if (settings.DEBUG_MODE) {\n            // make it visible for debug\n            $(inputTag).attr(nameSpaceKey+\"rules\", finalRules.join(\",\"));\n          }\n\n          // mark input field as required, just in case\n          if (errorRules.includes(\"required\")) {\n            $(inputTag).prop(\"required\", true);\n          }\n\n          // Warning if input field has no ID\n          if ( ! $(inputTag).attr(\"id\")) {\n            $(inputTag).attr(\"id\", inputIDStr);\n            WARNING(\"Form field missing ID attribute, generated an UUID instead [\"+inputIDStr+\"]\");\n          }\n\n        }\n\n      });\n\n      // Then scan form field(s) if any missing fules\n      // TODO: future requirement, special rules defined in form field\n      $el.find(supportedTag.join(',')).each((idx, e) => {\n        let typeOfField = supportedType.includes( $(e).prop(\"type\") ) ? $(e).prop(\"type\") : \"\";\n        let required = $(e).prop(\"required\") ? \"required\" : \"\";\n        // TODO: regex rules\n        let existingRules = $(e).data(nameSpaceKey+\"rules\") || [];\n\n        if (typeOfField != \"\")  { existingRules.push(typeOfField); }\n        if (required != \"\")     { existingRules.push(required); }\n        existingRules = [...new Set(existingRules)];\n\n        $(e).data(nameSpaceKey+\"rules\", existingRules);\n        if (settings.DEBUG_MODE) {\n          $(e).attr(nameSpaceKey+\"rules\", existingRules.join(\",\"));\n        }\n\n      });\n    }\n\n    // Keep looking for target until found\n    getTargetInputField(e) {\n\n      // Check if this fit of one of the case\n      let hasErrorFor     = $(e).attr(\"errorFor\") != undefined,\n          afterInput      = supportedTag.includes( $(e).prev().prop(\"tagName\") ),\n          underErrorGroup = $(e).parent().prop(\"tagName\") == \"errorGroup\".toUpperCase();\n      let underErrorGroupWithForKey = (underErrorGroup && $(e).parent().attr(\"errorFor\") !== undefined),\n          underErrorGroupAfterInput = (underErrorGroup && supportedTag.includes( $(e).parent().prev().prop(\"tagName\") ));\n\n      // Return the actual input field\n      if (hasErrorFor) {\n        let idKey = \"#\" + $(e).attr(\"errorFor\");\n        return $(idKey);\n\n      } else if (afterInput) {\n        return $(e).prev();\n\n      } else if (underErrorGroupWithForKey) {\n        let idKey = \"#\" + $(e).parent().attr(\"errorFor\");\n        return $(idKey);\n\n      } else if (underErrorGroupAfterInput) {\n        return $(e).parent().prev();\n      }\n\n      // Everything else is an issue, Exit\n      console.error(\"Error message with no paired validation target:\\n'\"+$(e).text()+\"'\");\n      return undefined;\n\n    }\n    // End of getTargetInputField() ~~~~~~~~~~~~~~~~~~~~~~~\n\n    // Loop thru all form fields\n    eachField_forDebugging() {\n      // TODO: Move all debug logic to this umbrella\n      $(supportedTag.join(',')).each((idx, e) => {\n        let rules = $(e).data(nameSpaceKey+\"rules\") || [];\n        settings.DEBUG_MODE && console.log($(e).attr(\"id\"), rules);\n      });\n\n    }\n\n    resetFormError() {\n      $el.find(supportedTag.join(',')).attr(\"aria-invalid\", false);\n      // $el.find(supportedTag.join(',')).each(() => {\n      //   $(this).attr(\"aria-invalid\", false);\n      // });\n      $(\"error, .error\").removeClass(\"errorShow\");\n    }\n\n    // TODO: replease the following method by npm UUID\n    generateUUID_v4() {        // Public Domain/MIT\n      let d = new Date().getTime();     // ***Timestamp, better use Date.now()\n      let d2 = (performance && performance.now && (performance.now()*1000)) || 0; //Time in microseconds since page-load or 0 if unsupported\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        let r = Math.random() * 16;   //random number between 0 and 16\n        if(d > 0){                    //Use timestamp until depleted\n          r = (d + r)%16 | 0;\n          d = Math.floor(d/16);\n        } else {                      //Use microseconds since page-load if supported\n          r = (d2 + r)%16 | 0;\n          d2 = Math.floor(d2/16);\n        }\n        return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n      });\n    }\n    // End of UUID_v4\n  }\n\n  // Avoid duplicated instantiations ~~~~~~~~~~~~~~~~~~~~~~\n  $.fn[pluginName] = function(options) {\n    return this.each(function () {\n      if (!$.data(this, 'plugin_'+ pluginName)) {\n        $.data(this, 'plugin_'+ pluginName, new p[pluginName](this, options));\n      }\n    });\n  };\n});"],"file":"../../src/js/jQuery.FormHelper.es6.js"}